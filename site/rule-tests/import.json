{
    "import/export": {
        "good": "",
        "bad": "<span class=\"token comment\">// bad 重复导出同一名称或者defaults</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...*/</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Multiple default exports.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> makeClass <span class=\"token comment\">// Multiple default exports.</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">foo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...*/</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Multiple exports of name 'foo'.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...*/</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> bar <span class=\"token keyword\">as</span> foo <span class=\"token punctuation\">}</span> <span class=\"token comment\">// Multiple exports of name 'foo'.</span>\n"
    },
    "import/first": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span>\n<span class=\"token keyword\">import</span> bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./bar'</span>\n\n<span class=\"token comment\">// something nonImport</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token comment\">/* eslint import/first: 'error' */</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n<span class=\"token comment\">// something nonImport</span>\n<span class=\"token keyword\">import</span> bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./bar'</span> <span class=\"token comment\">// &lt;- reported</span>\n\n<span class=\"token comment\">// or</span>\n\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">import</span> bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./bar'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span> <span class=\"token comment\">// &lt;- reported</span>\n"
    },
    "import/named": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token comment\">// ./bar.js</span>\n<span class=\"token comment\">// node_modules without jsnext:main are not analyzed by default</span>\n<span class=\"token comment\">// 可以结合 import/ignore 设置忽略报错的引入模块，如： node_modules</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SomeNonsenseThatDoesntExist <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> foo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> foo <span class=\"token keyword\">as</span> bar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token comment\">// ./foo.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">\"I'm so foo\"</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token comment\">/* eslint import/no-unresolved: 'error' */</span>\n\n<span class=\"token comment\">// ./baz.js</span>\n<span class=\"token comment\">// will follow 'jsnext:main', if available</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> dontCreateStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> notFoo <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token comment\">// ES7 proposal</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> notFoo <span class=\"token keyword\">as</span> defNotBar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token comment\">// ./foo.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> foo <span class=\"token operator\">=</span> <span class=\"token string\">\"I'm so foo\"</span>\n"
    },
    "import/newline-after-import": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">// do something</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">// do sth</span>\n"
    },
    "import/no-absolute-path": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span>\n<span class=\"token keyword\">import</span> a <span class=\"token keyword\">from</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">import</span> b <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token keyword\">var</span> _ <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./foo'</span><span class=\"token punctuation\">)</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> f <span class=\"token keyword\">from</span> <span class=\"token string\">'/foo'</span>\n<span class=\"token keyword\">import</span> f <span class=\"token keyword\">from</span> <span class=\"token string\">'/some/path'</span>\n\n<span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/foo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> f <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/some/path'</span><span class=\"token punctuation\">)</span>\n"
    },
    "import/no-amd": {
        "good": "",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* ... */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* ... */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"
    },
    "import/no-duplicates": {
        "good": "<span class=\"token comment\">// good  Flow type导入与标准导入可以区分开来</span>\n<span class=\"token keyword\">import</span> SomeDefaultClass<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> names <span class=\"token keyword\">from</span> <span class=\"token string\">'./mod'</span>\n<span class=\"token comment\">// Flow `type` import from same module is fine</span>\n<span class=\"token keyword\">import</span> type SomeType <span class=\"token keyword\">from</span> <span class=\"token string\">'./mod'</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> SomeDefaultClass <span class=\"token keyword\">from</span> <span class=\"token string\">'./mod'</span>\n\n<span class=\"token comment\">// oops, some other import separated these lines</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./some-other-mod'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> names <span class=\"token keyword\">from</span> <span class=\"token string\">'./mod'</span>\n\n<span class=\"token comment\">// will catch this too, assuming it is the same target module</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> something <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./mod.js'</span>\n"
    },
    "import/no-mutable-exports": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> counta <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">var</span> countb <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">let</span> countc <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> countc <span class=\"token punctuation\">}</span> <span class=\"token comment\">// reported here</span>\n"
    },
    "import/no-named-as-default-member": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token comment\">// foo.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token string\">'baz'</span>\n\n<span class=\"token comment\">// hello.js</span>\n<span class=\"token keyword\">import</span> foo<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token comment\">// foo.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token string\">'baz'</span>\n\n<span class=\"token comment\">// hello.js</span>\n<span class=\"token comment\">// Caution: `foo` also has a named export `bar`.</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> foo<span class=\"token punctuation\">.</span>bar <span class=\"token comment\">// instead: `import {bar} from './foo.js'`</span>\n\n<span class=\"token comment\">// Caution: `foo` also has a named export `bar`.</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> bar <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> foo <span class=\"token comment\">// instead: `import {bar} from './foo.js'`</span>\n"
    },
    "import/no-named-default": {
        "good": "<span class=\"token comment\">// good</span>\n\n<span class=\"token comment\">// foo.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token string\">'baz'</span>\n\n<span class=\"token comment\">// hello.js</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n<span class=\"token comment\">// import foo, { bar } from './foo'</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n\n<span class=\"token comment\">// foo.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'foo'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token string\">'baz'</span>\n\n<span class=\"token comment\">// import { default as foo } from './foo'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">as</span> foo<span class=\"token punctuation\">,</span> bar <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span>\n"
    },
    "import/no-self-import": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> bar <span class=\"token keyword\">from</span> <span class=\"token string\">'./bar'</span>\n\n<span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./bar'</span><span class=\"token punctuation\">)</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> bad1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./bad'</span>\n\n<span class=\"token keyword\">const</span> bad2 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./bad'</span><span class=\"token punctuation\">)</span>\n"
    },
    "import/no-unresolved": {
        "good": "",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token comment\">/* eslint import/no-unresolved: ['error', { commonjs: true, caseSensitive: true }] */</span>\n<span class=\"token keyword\">import</span> x <span class=\"token keyword\">from</span> <span class=\"token string\">'./foo'</span> <span class=\"token comment\">// reports if './foo' cannot be resolved on the filesystem</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> x <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./foo'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// reported if './foo' is not found</span>\n"
    },
    "import/no-webpack-loader-syntax": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token keyword\">import</span> myModule <span class=\"token keyword\">from</span> <span class=\"token string\">'my-module'</span>\n<span class=\"token keyword\">import</span> theme <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme.css'</span>\n\n<span class=\"token keyword\">var</span> myModule <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-module'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./theme.css'</span><span class=\"token punctuation\">)</span>\n",
        "bad": "<span class=\"token comment\">// bad</span>\n<span class=\"token keyword\">import</span> myModule <span class=\"token keyword\">from</span> <span class=\"token string\">'my-loader!my-module'</span>\n<span class=\"token keyword\">import</span> theme <span class=\"token keyword\">from</span> <span class=\"token string\">'style!css!./theme.css'</span>\n\n<span class=\"token keyword\">var</span> myModule <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-loader!./my-module'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style!css!./theme.css'</span><span class=\"token punctuation\">)</span>\n"
    },
    "import/order": {
        "good": "<span class=\"token comment\">// good</span>\n<span class=\"token comment\">/* eslint import/first: 'error' */</span>\n<span class=\"token comment\">// 1. node \"builtin\" modules</span>\n<span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span>\n<span class=\"token comment\">// 2. \"external\" modules</span>\n<span class=\"token keyword\">import</span> _ <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span>\n<span class=\"token keyword\">import</span> chalk <span class=\"token keyword\">from</span> <span class=\"token string\">'chalk'</span>\n<span class=\"token comment\">// 3. \"internal\" modules</span>\n<span class=\"token keyword\">import</span> foo <span class=\"token keyword\">from</span> <span class=\"token string\">'./src/foo'</span>\n",
        "bad": ""
    }
}