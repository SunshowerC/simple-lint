{
    "accessor-pairs": "@off\n强制getter/setter相互对应\nENG:enforces getter/setter pairs in objects",
    "array-callback-return": "数组的方法出了 forEach 之外， 回调函数必须有return\nENG:enforces return statements in callbacks of array's methods",
    "block-scoped-var": "将 var 定义的变量视为块作用域，禁止在块外使用\nENG:treat var statements as if they were block scoped",
    "complexity": "@off\n禁止函数的循环复杂度超过 11\nENG:specify the maximum cyclomatic complexity allowed in a program",
    "class-methods-use-this": "@off\n在类的非静态方法中，必须存在对 this 的引用\nENG:enforce that class methods use \"this\"",
    "consistent-return": "@off\n禁止函数在不同分支返回不同类型的值\nENG:require return statements to either always or never specify values",
    "curly": "@fixable if 后面必须要有 {，除非是单行 if\nENG:specify curly brace conventions for all control statements",
    "default-case": "switch 语句必须有 default 或者是 // no default 的注释\nENG:require default case in switch statements",
    "dot-location": "@fixable 链式调用的时候，点号必须放在第二行开头处，禁止放在第一行结尾处\nENG:enforces consistent newlines before or after dots",
    "dot-notation": "@fixable 禁止出现 foo['bar']，必须写成 foo.bar\nENG:encourages use of dot notation whenever possible",
    "eqeqeq": "@fixable 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外\nENG:require the use of === and !==",
    "guard-for-in": "for in 内部必须有 hasOwnProperty\nENG:make sure for-in loops have an if statement",
    "max-classes-per-file": "@off\n每个文件中禁止声明超过1个类\nENG:enforce a maximum number of classes per file\nTODO: semver-major (eslint 5): enable",
    "no-alert": "不建议使用 alert、confirm、prompt，会报warning\nENG:disallow the use of alert, confirm, and prompt",
    "no-caller": "禁止使用 caller 或 callee\nENG:disallow use of arguments.caller or arguments.callee",
    "no-case-declarations": "switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块\nENG:disallow lexical declarations in case/default clauses",
    "no-debugger": "生产环境下禁止使用 debugger",
    "no-div-regex": "禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/\n@off 有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难\nENG:disallow division operators explicitly at beginning of regular expression",
    "no-else-return": "@fixable 禁止在 else 内使用 return，必须改为提前结束,禁止使用else if语法\nENG:disallow else after a return in an if",
    "no-empty-function": "禁止有空函数，除非是将一个空函数设置为某个项的默认值\n允许：箭头函数、普通函数、类方法、对象内函数可以是空函数。\n禁止：getter、setter、generator、class的constructor是空函数\nENG:disallow empty functions, except for standalone funcs/arrows",
    "no-empty-pattern": "禁止解构中出现空 {} 或 []\nENG:disallow empty destructuring patterns",
    "no-eq-null": "禁止使用 foo == null 或 foo != null，必须使用 foo === null 或 foo !== null\n@off foo == null 用于判断 foo 不是 undefined 并且不是 null，比较常用，故允许此写法\nENG:disallow comparisons to null without a type-checking operator",
    "no-eval": "禁止使用 eval\nENG:disallow use of eval()",
    "no-extend-native": "禁止修改原生对象\nENG:disallow adding to native types",
    "no-extra-bind": "@fixable 禁止出现没必要的 bind\nENG:disallow unnecessary function binding",
    "no-extra-label": "@fixable 禁止出现没必要的 label\nENG:disallow Unnecessary Labels",
    "no-fallthrough": "switch 的 case 内必须有 break, return 或 throw来阻止switch case的“fall through”现象,\n或者标有注释“falls through“表示允许 falls through 的现象\nENG:disallow fallthrough of case statements",
    "no-floating-decimal": "@fixable 表示小数时，禁止省略 0，比如 .5\nENG:disallow the use of leading or trailing decimal points in numeric literals",
    "no-global-assign": "禁止对全局变量赋值\nENG:disallow reassignments of native objects or read-only globals",
    "no-native-reassign": "@off\n禁止修改只读全局变量\n废弃于eslint v3.3.0版本，no-global-assign作为取代\nENG:deprecated in favor of no-global-assign",
    "no-implicit-coercion": "@off\n@fixable 禁止使用 !! ~ 等难以理解的运算符\nENG:disallow implicit type conversions",
    "no-implicit-globals": "@off\n禁止在全局作用域下定义变量或申明函数\nENG:disallow var and named functions in global scope",
    "no-implied-eval": "禁止在 setTimeout 或 setInterval 中传入字符串，如 setTimeout('alert(\"Hi!\")', 100);\nENG:disallow use of eval()-like methods",
    "no-invalid-this": "禁止在类之外的地方使用 this\n@off this 的使用很灵活，事件回调中可以表示当前元素，函数也可以先用 this，等以后被调用的时候再 call\nENG:disallow this keywords outside of classes or class-like objects",
    "no-iterator": "禁止使用 __iterator__\nENG:disallow usage of __iterator__ property",
    "no-labels": "禁止使用 label",
    "no-lone-blocks": "禁止使用没必要的 {} 作为代码块\nENG:disallow unnecessary nested blocks",
    "no-loop-func": "禁止在循环内的函数中引用了循环体内var定义的变量而造成代码并没有按预期工作。\nENG:disallow creation of functions within loops",
    "no-magic-numbers": "@off\n禁止使用 magic numbers，确保特殊的数字被声明为常量\nENG:disallow magic numbers",
    "no-multi-spaces": "@fixable 禁止出现连续的多个空格\nENG:disallow use of multiple spaces",
    "no-multi-str": "禁止使用 \\ 来换行字符串\nENG:disallow use of multiline strings",
    "no-new": "@off\n禁止直接 new 一个类而不赋值\nENG:disallow use of new operator when not part of the assignment or comparison",
    "no-new-func": "禁止使用 new Function，比如 let x = new Function(\"a\", \"b\", \"return a + b\");\nENG:disallow use of new operator for Function object",
    "no-new-wrappers": "禁止使用 new 来生成 String, Number 或 Boolean\nENG:disallows creating new instances of String, Number, and Boolean",
    "no-octal": "禁止使用 0 开头的数字表示八进制数\nENG:disallow use of (old style) octal literals",
    "no-octal-escape": "禁止使用八进制的转义符\nENG:disallow use of octal escape sequences in string literals, such as\nvar foo = 'Copyright \\251';",
    "no-param-reassign": "@off\n禁止对函数的参数重新赋值\nENG:disallow reassignment of function parameters\ndisallow parameter object manipulation except for specific exclusions",
    "no-proto": "禁止使用 __proto__\nENG:disallow usage of __proto__ property",
    "no-redeclare": "禁止重复定义变量\nENG:disallow declaring the same variable more then once",
    "no-restricted-properties": "禁止使用指定的对象属性\nENG:disallow certain object properties",
    "no-return-assign": "禁止在 return 语句里赋值\nENG:disallow use of assignment in return statement",
    "no-return-await": "禁止在 return 语句里使用 await\nENG:disallow redundant `return await`",
    "no-script-url": "禁止出现 location.href = 'javascript:void(0)';\nENG:disallow use of `javascript:` urls.",
    "no-self-assign": "禁止将自己赋值给自己\nENG:disallow self assignment\nTODO: semver-major: props -> true",
    "no-self-compare": "禁止将自己与自己比较\nENG:disallow comparisons where both sides are exactly the same",
    "no-sequences": "禁止使用逗号操作符\nENG:disallow use of comma operator",
    "no-throw-literal": "禁止 throw 字面量，必须 throw 一个 Error 对象\nENG:restrict what can be thrown as an exception",
    "no-unmodified-loop-condition": "@off\n循环内必须对循环条件的变量有修改\nENG:disallow unmodified conditions of loops",
    "no-unused-expressions": "@off\n禁止无用的表达式\nENG:disallow usage of expressions in statement position",
    "no-unused-labels": "@fixable 禁止出现没用的 label\nENG:disallow unused labels",
    "no-useless-call": "@off\n禁止出现没必要的 call 或 apply\nENG:disallow unnecessary .call() and .apply()",
    "no-useless-concat": "禁止出现没必要的字符串连接\nENG:disallow useless string concatenation",
    "no-useless-escape": "禁止出现没必要的转义\nENG:disallow unnecessary string escaping",
    "no-useless-return": "@fixable 禁止没必要的 return\nENG:disallow redundant return; keywords",
    "no-void": "禁止使用 void\nENG:disallow use of void operator",
    "no-warning-comments": "@off\n禁止注释开头中出现 TODO 和 FIXME 和 XXX\nENG:disallow usage of configurable warning terms in comments: e.g. todo",
    "no-with": "禁止使用 with\nENG:disallow use of the with statement",
    "prefer-promise-reject-errors": "Promise 的 reject 中必须传入 Error 对象，而不是字面量，允许promise.reject()不带参数\nENG:require using Error objects as Promise rejection reasons",
    "radix": "parseInt 必须传入第二个参数\nENG:require use of the second argument for parseInt()",
    "require-await": "@off async function 中没有 await 的写法很常见，比如 koa 的示例中就有这种用法\nasync 函数中必须存在 await 语句\nENG:require `await` in `async function` (note: this is a horrible rule that should never be used)",
    "require-unicode-regexp": "@off\n正则表达式中必须使用 u 标志\nENG:Enforce the use of u flag on RegExp",
    "vars-on-top": "var 必须在作用域的最前面\nENG:requires to declare all vars on top of their containing scope",
    "wrap-iife": "@fixable 立即执行的函数必须符合如下格式 (function () { return { y: 1 };})()\nENG:require immediate function invocation to be wrapped in parentheses",
    "yoda": "@fixable 必须使用 if (foo === 5) 而不是 if (5 === foo)\nENG:require or disallow Yoda conditions"
}