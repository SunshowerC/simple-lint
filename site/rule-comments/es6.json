{
    "arrow-body-style": "@off\n@fixable 箭头函数能够省略 return 的时候，必须省略，比如必须写成 () => 0，禁止写成 () => { return 0 }\nENG:enforces no braces where they can be omitted\nTODO: enable requireReturnForObjectLiteral?",
    "arrow-parens": "@fixable 箭头函数的参数必须加括号\nENG:require parens in arrow function arguments\nhttps://eslint.org/docs/rules/arrow-parens",
    "arrow-spacing": "@fixable 箭头函数的箭头前后必须有空格\nENG:require space before/after arrow function's arrow",
    "constructor-super": "constructor 中必须有 super\nENG:verify super() callings in constructors",
    "generator-star-spacing": "@fixable generator 的 * 前面禁止有空格，后面必须有空格\nENG:enforce the spacing around the * in generator functions",
    "no-class-assign": "禁止对定义过的 class 重新赋值\nENG:disallow modifying variables of class declarations",
    "no-confusing-arrow": "@fixable 禁止出现难以理解的箭头函数，比如 let x = a => 1 ? 2 : 3\nENG:disallow arrow functions where they could be confused with comparisons",
    "no-const-assign": "禁止对使用 const 定义的常量重新赋值\nENG:disallow modifying variables that are declared using const",
    "no-dupe-class-members": "禁止重复定义类\nENG:disallow duplicate class members",
    "no-duplicate-imports": "@off\n禁止重复 import 模块\n被 import/no-duplicates 取代\nENG:disallow importing from the same path more than once\nreplaced by https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-duplicates.md",
    "no-new-symbol": "禁止使用 new 来生成 Symbol\nENG:disallow symbol constructor",
    "no-restricted-imports": "@off\n禁止 import 指定的模块\nENG:disallow specific imports",
    "no-this-before-super": "禁止在 super 被调用之前使用 this 或 super\nENG:disallow to use this/super before super() calling in constructors.",
    "no-useless-computed-key": "@fixable 禁止出现没必要的计算键名，比如 let a = { ['0']: 0 };\nENG:disallow useless computed property keys",
    "no-useless-constructor": "禁止出现没必要的 constructor，比如 constructor(value) { super(value) }\nENG:disallow unnecessary constructor",
    "no-useless-rename": "@fixable 禁止解构时出现同样名字的的重命名，比如 let { foo: foo } = bar;\nENG:disallow renaming import, export, and destructured assignments to the same name",
    "no-var": "@fixable 禁止使用 var\nENG:require let or const instead of var",
    "object-shorthand": "@fixable\n必须使用 a = {b} 而不是 a = {b: b}\n必须使用 \"bar\": function() {} 而不是 \"bar\"() {}\n对象引用简写语法\nENG:require method and property shorthand syntax for object literals",
    "prefer-arrow-callback": "@fixable 建议使用箭头函数作为回调\nENG:suggest using arrow functions as callbacks",
    "prefer-const": "@fixable 申明后不再被修改的变量必须使用 const 来申明\nENG:suggest using of const declaration for variables that are never modified after declared",
    "prefer-destructuring": "@off\n必须使用解构\nENG:Prefer destructuring from arrays and objects",
    "prefer-numeric-literals": "@fixable 必须使用 0b11111011 而不是 parseInt('111110111', 2)\n禁止使用parseInt来作用于二进制、八进制、十六进制的内容\nENG:disallow parseInt() in favor of binary, octal, and hexadecimal literals",
    "prefer-reflect": "@off\n建议使用 Reflect, v3.9.0 已废弃\nENG:suggest using Reflect methods where applicable",
    "prefer-rest-params": "@off\n必须使用 ...args 而不是 arguments\nENG:use rest parameters instead of arguments",
    "prefer-spread": "@fixable\n当apply后的this不变时，必须使用 ... 而不是 apply，比如 foo(...args)\nENG:suggest using the spread operator instead of .apply()",
    "prefer-template": "@fixable 必须使用模版字符串而不是字符串连接\nENG:suggest using template literals instead of string concatenation",
    "require-yield": "generator 函数内必须有 yield\nENG:disallow generator functions that do not have yield",
    "rest-spread-spacing": "@fixable ... 的后面禁止有空格\nENG:enforce spacing between object rest-spread",
    "sort-imports": "@off\n@fixable import 必须按规则排序\nENG:import sorting",
    "symbol-description": "创建 Symbol 时必须传入参数\nENG:require a Symbol description",
    "template-curly-spacing": "@fixable ${name} 内的首尾禁止有空格\nENG:enforce usage of spacing in template strings",
    "yield-star-spacing": "@fixable yield* 后面必须要有空格\nENG:enforce spacing around the * in yield* expressions"
}