{
    "for-direction": "禁止执行“for”循环更新子句以错误的方向移动，防止无限循环\nENG:Enforce “for” loop update clause moving the counter in the right direction",
    "getter-return": "getter 必须有返回值，并且禁止返回空，比如 return;\nENG:Enforces that a return statement is present in property getters",
    "no-async-promise-executor": "@off\n禁止使用异步函数作为Promise执行程序\nENG:disallow using an async function as a Promise executor\nTODO: enable, semver-major",
    "no-await-in-loop": "禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了\nENG:Disallow await inside of loops",
    "no-compare-neg-zero": "禁止与负零进行比较\nENG:Disallow comparisons to negative zero",
    "no-cond-assign": "禁止在测试表达式中使用赋值语句\nENG:disallow assignment in conditional expressions",
    "no-console": "@off\n禁止使用 console\nENG:disallow use of console",
    "no-constant-condition": "不建议将常量作为分支条件判断中的测试表达式\nENG:disallow use of constant expressions in conditions",
    "no-control-regex": "禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/\nENG:disallow control characters in regular expressions",
    "no-debugger": "@fixable 禁止使用 debugger\nENG:disallow use of debugger",
    "no-dupe-args": "禁止在函数参数中出现重复名称的参数\nENG:disallow duplicate arguments in functions",
    "no-dupe-keys": "禁止在对象字面量中出现重复名称的键名\nENG:disallow duplicate keys when creating object literals",
    "no-duplicate-case": "禁止在 switch 语句中出现重复测试表达式的 case\nENG:disallow a duplicate case label.",
    "no-empty": "禁止出现空代码块\nENG:disallow empty statements",
    "no-empty-character-class": "禁止在正则表达式中使用空的字符集 []\nENG:disallow the use of empty character classes in regular expressions",
    "no-ex-assign": "禁止将 catch 的第一个参数 error 重新赋值\nENG:disallow assigning to the exception in a catch block",
    "no-extra-boolean-cast": "@fixable 禁止不必要的布尔类型转换，比如 !! 或 Boolean\nENG:disallow double-negation boolean casts in a boolean context",
    "no-extra-parens": "@off\n@fixable 禁止函数表达式中出现多余的括号，比如 let foo = (function () { return 1 })\nENG:disallow unnecessary parentheses",
    "enforceForArrowConditionals": "delegate to eslint-plugin-react",
    "no-extra-semi": "@fixable 禁止出现多余的分号\nENG:disallow unnecessary semicolons",
    "no-func-assign": "禁止将一个函数声明重新赋值，如：\nfunction foo() {}\nfoo = bar\nENG:disallow overwriting functions written as function declarations",
    "no-inner-declarations": "禁止在 if 代码块内出现函数声明\nENG:disallow function or variable declarations in nested blocks",
    "no-invalid-regexp": "禁止在 RegExp 构造函数中出现非法的正则表达式\nENG:disallow invalid regular expression strings in the RegExp constructor",
    "no-irregular-whitespace": "禁止使用特殊空白符（比如全角空格)\nENG:disallow irregular whitespace outside of strings and comments",
    "no-misleading-character-class": "@off\n禁止在字符类语法中使用多个代码点生成的字符\nENG:Disallow characters which are made with multiple code points in character class syntax\nTODO: enable, semver-major",
    "no-obj-calls": "禁止将 Math, JSON 或 Reflect 直接作为函数调用\nENG:disallow the use of object properties of the global object (Math and JSON) as functions",
    "no-prototype-builtins": "禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable\nENG:disallow use of Object.prototypes builtins directly",
    "no-regex-spaces": "@fixable 禁止在正则表达式中出现连续的空格，必须使用 /foo {3}bar/ 代替\nENG:disallow multiple spaces in a regular expression literal",
    "no-sparse-arrays": "禁止在数组中出现连续的逗号，如 let foo = [,,]\nENG:disallow sparse arrays",
    "no-template-curly-in-string": "禁止在普通字符串中出现模版字符串里的变量形式，如 'Hello ${name}!'\nENG:Disallow template literal placeholder syntax in regular strings",
    "no-unexpected-multiline": "禁止出现难以理解的多行表达式，如：\nlet foo = bar\n[1, 2, 3].forEach(baz);\nENG:Avoid code that looks like two expressions but is actually one",
    "no-unreachable": "禁止在 return, throw, break 或 continue 之后还有代码\nENG:disallow unreachable statements after a return, throw, continue, or break statement",
    "no-unsafe-finally": "禁止在 finally 中出现 return, throw, break 或 continue\nENG:disallow return/throw/break/continue inside finally blocks",
    "no-unsafe-negation": "@fixable 禁止在 in 或 instanceof 操作符的左侧使用感叹号，如 if (!key in object)\nENG:disallow negating the left operand of relational operators",
    "no-negated-in-lhs": "@off\n禁止在in表达式中否定左操作数\n此规则在ESLint v3.3.0 中已弃用，并替换为no-unsafe-negation规则。\nENG:disallow negation of the left operand of an in expression\ndeprecated in favor of no-unsafe-negation",
    "require-atomic-updates": "@off\n禁止因使用await或yield（需要原子更新）而导致竞争条件的分配\nENG:Disallow assignments that can lead to race conditions due to usage of await or yield\nTODO: enable, semver-major",
    "use-isnan": "禁止使用 foo === NaN , 使用 isNaN(foo)\nENG:disallow comparisons with the value NaN",
    "valid-jsdoc": "@off\n注释必须符合 JsDoc 的规范\nENG:ensure JSDoc comments are valid",
    "valid-typeof": "typeof 表达式比较的对象必须是字符串文字或其他typeof表达式\n'undefined', 'object', 'boolean', 'number', 'string', 'function' 或 'symbol'\nENG:ensure that the results of typeof are compared against a valid string"
}