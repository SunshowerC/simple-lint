{
    "import/no-unresolved": "Static analysis:\nclassify\n确保导入模块存在且区分大小写，不满足导入时报告错误。支持ES6、commonjs\nENG:ensure imports point to files/modules that can be resolved",
    "import/named": "确保导入的内容有export\nENG:ensure named imports coupled with named exports",
    "import/default": "@off\n如果请求默认导入，则如果导入模块中没有默认导出，则此规则将报告。\nENG:ensure default import coupled with default export",
    "import/namespace": "@off\n当 import * as xxx from ...时， xxx.zzz引用的属性名称必须在导出文件中有命名export",
    "import/export": "Helpful warnings:\nclassify\n禁止重复导出名称 或 重复导出defaults\nENG:disallow invalid exports, e.g. multiple defaults",
    "import/no-named-as-default": "ENG:do not allow a default import name to match a named export",
    "import/no-named-as-default-member": "当导出文件中已有你需要的变量名，禁止通过default import值再重新获取。\n而是用 import { xxx } from xxx 的方式导入\nENG:warn on accessing default export property names that are also named exports",
    "import/no-deprecated": "@off\nENG:disallow use of jsdoc-marked-deprecated imports",
    "import/no-extraneous-dependencies": "@off\n禁止使用无关的包\nENG:Forbid the use of extraneous packages\npaths are treated both as absolute paths, and relative to process.cwd()",
    "tests/**": "tape, common npm pattern",
    "spec/**": "also common npm pattern",
    "**/__tests__/**": "mocha, rspec-like pattern",
    "**/__mocks__/**": "jest pattern",
    "test.{js,jsx}": "jest pattern",
    "test-*.{js,jsx}": "repos with a single test file",
    "**/*{.,_}{test,spec}.{js,jsx}": "repos with multiple top-level test files",
    "**/jest.config.js": "tests where the extension or filename suffix denotes that it is a test",
    "**/vue.config.js": "jest config",
    "**/webpack.config.js": "vue-cli config",
    "**/webpack.config.*.js": "webpack config",
    "**/rollup.config.js": "webpack config",
    "**/rollup.config.*.js": "rollup config",
    "**/gulpfile.js": "rollup config",
    "**/gulpfile.*.js": "gulp config",
    "**/Gruntfile{,.js}": "gulp config",
    "**/protractor.conf.js": "grunt config",
    "**/protractor.conf.*.js": "protractor config",
    "undefined": "protractor config",
    "import/no-mutable-exports": "禁止使用带有var或let的可变导出。\nENG:Forbid mutable exports",
    "import/no-amd": "Module systems:\nclassify\n禁止AMD require/define方式导入\nENG:disallow AMD require/define",
    "import/no-commonjs": "@off\nENG:disallow require()",
    "import/no-nodejs-modules": "@off\nENG:No Node.js builtin modules\nTODO: enable?",
    "import/first": "Style guide\nclassify\nimport 必须在非导入语句 的前面。绝对路径的导入要在相对路径的前面\nENG:disallow non-import statements appearing before import statements",
    "import/imports-first": "@off\n请使用import/first\nENG:disallow non-import statements appearing before import statements\ndeprecated: use `import/first`",
    "import/no-duplicates": "禁止多次导入同一个已解析路径\nENG:disallow duplicate imports",
    "import/no-namespace": "@off\nENG:disallow namespace imports\nTODO: enable?",
    "import/extensions": "确保在导入路径中一致使用文件扩展名,但其中js，mjs，jsx建议忽略\nENG:Ensure consistent use of file extension within the import path",
    "import/order": "@fixable\nimport语句应该遵循一定的顺序。node内建模块、第三方库模块、内部定义的模块文件\nENG:ensure absolute imports are above relative imports and that unassigned imports are ignored\nTODO: enforce a stricter convention in module import order?",
    "import/newline-after-import": "@fixable\nimport / Require() 后要空出一个空行\nENG:Require a newline after the last import/require in a group",
    "import/prefer-default-export": "@off\nENG:Require modules with a single export to use a default export",
    "import/no-restricted-paths": "@off\nENG:Restrict which files can be imported in a given folder",
    "import/max-dependencies": "@off\nENG:Forbid modules to have too many dependencies",
    "import/no-absolute-path": "禁止使用绝对路径导入模块\nENG:Forbid import of modules using absolute paths",
    "import/no-dynamic-require": "禁止使用表达式调用require()\nENG:Forbid require() calls with expressions",
    "import/no-internal-modules": "@off\nENG:prevent importing the submodules of other modules",
    "import/unambiguous": "@off\nENG:Warn if a module could be mistakenly parsed as a script by a consumer\nleveraging Unambiguous JavaScript Grammar\nthis should not be enabled until this proposal has at least been *presented* to TC39.\nAt the moment, it's not a thing.",
    "import/no-webpack-loader-syntax": "禁止在导入中使用Webpack加载程序语法。\nENG:Forbid Webpack loader syntax in imports",
    "import/no-unassigned-import": "@off\nENG:Prevent unassigned imports\nimporting for side effects is perfectly acceptable, if you need side effects.",
    "import/no-named-default": "禁止把 default 作为本地命名导入\nENG:Prevent importing the default as if it were named",
    "import/no-anonymous-default-export": "@off\nENG:Reports if a module's default export is unnamed",
    "import/exports-last": "@off\nENG:This rule enforces that all exports are declared at the bottom of the file.\nTODO: enable?",
    "import/group-exports": "@off\nENG:Reports when named exports are not grouped together in a single export declaration\nor when multiple assignments to CommonJS module.exports or exports object are present\nin a single file.",
    "import/no-default-export": "@off\nENG:forbid default exports. this is a terrible rule, do not use it.",
    "import/no-self-import": "禁止模块导入自己\nENG:Forbid a module from importing itself",
    "import/no-cycle": "禁止模块引用造成的循环。\nENG:Forbid cyclical dependencies between modules",
    "import/no-useless-path-segments": "使用此规则可防止导入和require语句中出现不必要的路径段。\nENG:Ensures that there are no useless path segments",
    "import/dynamic-import-chunkname": "@off\nENG:dynamic imports require a leading comment with a webpackChunkName",
    "import/no-relative-parent-imports": "@off\nENG:Use this rule to prevent imports to folders in relative parent paths."
}